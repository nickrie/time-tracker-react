{"version":3,"sources":["components/LoadingScreen.js","helpers/auth.js","secret/firebaseConfig.js","components/layout/AppNavbar.js","components/layout/AppFooter.js","components/Login.js","components/tasks/AddTask.js","helpers/display.js","components/tasks/EditTask.js","components/tasks/LoggedTime.js","components/tasks/LastActive.js","components/tasks/TaskButtons.js","components/tasks/Task.js","components/tasks/Tasks.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["LoadingScreen","react_default","a","createElement","Component","locationHelper","locationHelperBuilder","browserHistory","createHistory","UserIsAuthenticated","connectedRouterRedirect","wrapperDisplayName","AuthenticatingComponent","allowRedirectBack","redirectPath","state","ownProps","getRedirectQueryParam","authenticatingSelector","_ref","_ref$firebase","firebase","auth","isInitializing","profile","isLoaded","authenticatedSelector","_ref2","isEmpty","redirectAction","newLoc","dispatch","replace","type","UserIsNotAuthenticated","_ref3","_ref3$firebase","_ref4","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","AppNavbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","isAuthenticated","logout","bind","assertThisInitialized","window","confirm","signOut","className","href","email","onClick","formHidden","showForm","uid","compose","firebaseConnect","connect","Footer","Date","getFullYear","Login","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","GithubAuthProvider","EmailAuthProvider","callbacks","signInSuccess","layout_AppNavbar","StyledFirebaseAuth_default","firebaseAuth","withFirebase","AddTask","name","hours","minutes","handleChange","handleSubmit","e","setState","defineProperty","target","value","_this2","preventDefault","_this$props","firestore","_this$state","check","validateTaskInputs","taskId","error","alert","msg","parseInt","logged","created","taskAdd","started","last","add","collection","then","res","id","startTask","onSubmit","placeholder","autoComplete","onChange","hideForm","firestoreConnect","displayMinutes","mins","hrs","Math","floor","displayActiveMinutes","task","activeMinutes","Moment","b","toDate","seconds","diff","ceil","EditTask","loadedTaskId","updateActiveMinutes","handleCancelClick","handleDeleteClick","handleSubmitClick","clearInterval","refreshTimer","setInterval","cancelEdit","deleteTask","taskUpdate","update","doc","min","max","components_LoadingScreen","storeAs","ordered","LoggedTime","totalMinutes","LastActive","isActive","now","long","short","moment","from","TaskButtons","handleEditClick","editTask","onDeleteClick","disabled","editTaskId","style","marginRight","Task","nowDate","handleRowClick","updateTimeValues","prevProps","classList","contains","stopRunningTasks","rowClasses","stoppedTaskId","hoverIconClasses","actionIconClasses","startedTaskId","icon","tasks_LoggedTime","tasks_LastActive","tasks_TaskButtons","Tasks","tasks","map","tasks_Task","key","Main","delete","console","log","_this3","setTimeout","_this4","forEach","trim","focus","nameExists","isNaN","form","tasks_AddTask","tasks_EditTask","tasks_Tasks","orderBy","where","initializeApp","store","reactReduxFirebase","userProfile","useFirestoreForProfile","reduxFirestore","createStore","createStoreWithFirebase","combineReducers","firebaseReducer","firestoreReducer","__REDUX_DEVTOOLS_EXTENSION__","App","es","BrowserRouter","Switch","Route","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gTAQeA,mLAJX,OAAOC,EAAAC,EAAAC,cAAA,gCAFiBC,aCGtBC,EAAiBC,IAAsB,IACvCC,EAAiBC,MAEVC,EAAsBC,kCAAwB,CACzDC,mBAAoB,sBACpBC,wBAAyBZ,EACzBa,mBAAmB,EACnBC,aAAc,SAACC,EAAOC,GAAR,OACZX,EAAeY,sBAAsBD,IAAa,UACpDE,uBAAwB,SAAAC,GAAA,IAAAC,EAAAD,EAAGE,SAAYC,EAAfF,EAAeE,KAAeC,GAA9BH,EAAqBI,QAArBJ,EAA8BG,gBAA9B,OACrBD,EAAKG,WAA+B,IAAnBF,GACpBG,sBAAuB,SAAAC,GAAA,IAAeL,EAAfK,EAAGN,SAAYC,KAAf,OACrBA,EAAKG,WAAaH,EAAKM,SACzBC,eAAgB,SAAAC,GAAM,OAAI,SAAAC,GACxBxB,EAAeyB,QAAQF,GACvBC,EAAS,CAAEE,KAAM,0BAIRC,EAAyBxB,kCAAwB,CAC5DC,mBAAoB,yBACpBC,wBAAyBZ,EACzBa,mBAAmB,EACnBC,aAAc,SAACC,EAAOC,GAAR,OACZX,EAAeY,sBAAsBD,IAAa,KACpDE,uBAAwB,SAAAiB,GAAA,IAAAC,EAAAD,EAAGd,SAAYC,EAAfc,EAAed,KAAMC,EAArBa,EAAqBb,eAArB,OACrBD,EAAKG,WAA+B,IAAnBF,GACpBG,sBAAuB,SAAAW,GAAA,IAAef,EAAfe,EAAGhB,SAAYC,KAAf,OACrBA,EAAKG,UAAYH,EAAKM,SACxBC,eAAgB,SAAAC,GAAM,OAAI,SAAAC,GACxBxB,EAAeyB,QAAQF,GACvBC,EAAS,CAAEE,KAAM,oFC3BNK,EATQ,CACrBC,OAAQ,0CACRC,WAAY,2CACZC,YAAa,kDACbC,UAAW,2BACXC,cAAe,uCACfC,kBAAmB,yCCCfC,cAKJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KALR/B,MAAQ,CACNuC,iBAAiB,GAKjBP,EAAKQ,OAASR,EAAKQ,OAAOC,KAAZR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KAFGA,wEAeV,IACC1B,EAAa6B,KAAKJ,MAAlBzB,SACJqC,OAAOC,QAAQ,sCACjBtC,EAASC,OAAOsC,2CAIX,IACCN,EAAoBJ,KAAKnC,MAAzBuC,gBACAhC,EAAS4B,KAAKJ,MAAdxB,KAER,OACErB,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,6DACb5D,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,aACb5D,EAAAC,EAAAC,cAAA,KAAG2D,KAAK,KAAKD,UAAU,gBACrB5D,EAAAC,EAAAC,cAAA,KAAG0D,UAAU,sBADf,mBAIA5D,EAAAC,EAAAC,cAAA,KAAG2D,KAAK,6BAA6BD,UAAU,mBAC7C5D,EAAAC,EAAAC,cAAA,KAAG0D,UAAU,yBAEdP,EACCrD,EAAAC,EAAAC,cAAA,MAAI0D,UAAU,sBACZ5D,EAAAC,EAAAC,cAAA,MAAI0D,UAAU,8CACZ5D,EAAAC,EAAAC,cAAA,SAAImB,EAAKyC,QAEX9D,EAAAC,EAAAC,cAAA,MAAI0D,UAAU,YACZ5D,EAAAC,EAAAC,cAAA,KAAG2D,KAAK,KAAKD,UAAU,aAAaG,QAASd,KAAKK,QAAlD,YAMJ,GAEDL,KAAKJ,MAAMmB,WACVhE,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,QACb5D,EAAAC,EAAAC,cAAA,KAAG2D,KAAK,KAAKE,QAASd,KAAKJ,MAAMoB,SAAUL,UAAU,cACnD5D,EAAAC,EAAAC,cAAA,KAAG0D,UAAU,8BAIjB,wDApDsBf,EAAO/B,GAGrC,OAFiB+B,EAATxB,KAEC6C,IACA,CAAEb,iBAAiB,GAEnB,CAAEA,iBAAiB,UAhBRlD,aA6ETgE,cACbC,4BACAC,kBAAQ,SAACvD,EAAO+B,GAAR,MAAmB,CACzBxB,KAAMP,EAAMM,SAASC,QAHV8C,CAKbvB,GCvFa,SAAS0B,IACtB,OACEtE,EAAAC,EAAAC,cAAA,UAAQ0D,UAAU,0CAChB5D,EAAAC,EAAAC,cAAA,KAAG0D,UAAU,QAAb,QACS5D,EAAAC,EAAAC,cAAA,KAAG2D,KAAK,8BAAR,iBACN,KAAM,IAAIU,MAAOC,oBCApBC,mLACK,IACCrD,EAAa6B,KAAKJ,MAAlBzB,SAEFsD,EAAW,CACfC,WAAY,QACZC,cAAe,CACbxD,EAASC,KAAKwD,mBAAmBC,YACjC1D,EAASC,KAAK0D,mBAAmBD,YACjC1D,EAASC,KAAK2D,kBAAkBF,aAElCG,UAAW,CACTC,cAAe,kBAAM,KAIzB,OACElF,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,QACb5D,EAAAC,EAAAC,cAACiF,EAAD,MACAnF,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,8BACb5D,EAAAC,EAAAC,cAAA,MAAI0D,UAAU,kBAAd,YACA5D,EAAAC,EAAAC,cAAA,KAAG0D,UAAU,QAAb,2BAEF5D,EAAAC,EAAAC,cAACkF,EAAAnF,EAAD,CACEyE,SAAUA,EACVW,aAAcjE,EAASC,SAEzBrB,EAAAC,EAAAC,cAACoE,EAAD,cA3BYnE,aAiCLmF,yBAAab,6BClCtBc,cAOJ,SAAAA,EAAY1C,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsC,IACjBzC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwC,GAAAnC,KAAAH,KAAMJ,KAPR/B,MAAQ,CACN0E,KAAM,GACNC,MAAO,EACPC,QAAS,GAKT5C,EAAK6C,aAAe7C,EAAK6C,aAAapC,KAAlBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KACpBA,EAAK8C,aAAe9C,EAAK8C,aAAarC,KAAlBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KAHHA,4EAMN+C,GACX5C,KAAK6C,SAAL/C,OAAAgD,EAAA,EAAAhD,CAAA,GAAiB8C,EAAEG,OAAOR,KAAOK,EAAEG,OAAOC,6CAG/BJ,GAAG,IAAAK,EAAAjD,KACd4C,EAAEM,iBADY,IAAAC,EAGcnD,KAAKJ,MAAzBwD,EAHMD,EAGNC,UAAWhF,EAHL+E,EAGK/E,KACXmE,EAASvC,KAAKnC,MAAd0E,KAJMc,EAKWrD,KAAKnC,MAAxB2E,EALQa,EAKRb,MAAOC,EALCY,EAKDZ,QAEPa,EAAQtD,KAAKJ,MAAM2D,mBACvBvD,KAAKJ,MAAM4D,OACXjB,EACAC,EACAC,GAGF,GAAIa,EAAMG,MACRC,MAAMJ,EAAMK,SADd,CAKAnB,EAAkB,OAAVA,GAA4B,KAAVA,EAAe,EAAIoB,SAASpB,GACtDC,EAAsB,OAAZA,GAAgC,KAAZA,EAAiB,EAAImB,SAASnB,GAC5D,IAAMoB,EAA2B,GAAlBD,SAASpB,GAAcoB,SAASnB,GACzCqB,EAAU,IAAIxC,KAEdyC,EAAU,CACd9C,IAAK7C,EAAK6C,IACV6C,UACAvB,OACAsB,SACAG,QAAS,KACTC,KAAM,MAGRb,EAAUc,IAAI,CAAEC,WAAY,SAAWJ,GAASK,KAAK,SAAAC,GAEnDN,EAAQO,GAAKD,EAAIC,GAEjBrB,EAAKrD,MAAM2E,UAAUR,KAIvB/D,KAAK6C,SAAS,CACZN,KAAM,GACNC,MAAO,EACPC,QAAS,sCAKX,OACE1F,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,iBACb5D,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,aACb5D,EAAAC,EAAAC,cAAA,QAAM0D,UAAU,eAAe6D,SAAUxE,KAAK2C,cAC5C5F,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,OACb5D,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,gCACb5D,EAAAC,EAAAC,cAAA,SACEsF,KAAK,OACL5B,UAAU,uBACV5B,KAAK,OACL0F,YAAY,YACZC,aAAa,MACb1B,MAAOhD,KAAKnC,MAAM0E,KAClBoC,SAAU3E,KAAK0C,gBAGnB3F,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,gCACb5D,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,eACb5D,EAAAC,EAAAC,cAAA,SACEsF,KAAK,QACL5B,UAAU,eACV5B,KAAK,SACL0F,YAAY,QACZC,aAAa,MACb1B,MAAOhD,KAAKnC,MAAM2E,MAClBmC,SAAU3E,KAAK0C,eAEjB3F,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,sBACb5D,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,oBAAf,QAIN5D,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,gCACb5D,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,eACb5D,EAAAC,EAAAC,cAAA,SACEsF,KAAK,UACL5B,UAAU,eACV5B,KAAK,SACL0F,YAAY,UACZC,aAAa,MACb1B,MAAOhD,KAAKnC,MAAM4E,QAClBkC,SAAU3E,KAAK0C,eAEjB3F,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,sBACb5D,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,oBAAf,SAMR5D,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,OACb5D,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,OACb5D,EAAAC,EAAAC,cAAA,UAAQ0D,UAAU,gCAAlB,aAIF5D,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,kBACb5D,EAAAC,EAAAC,cAAA,UACE0D,UAAU,oBACV5B,KAAK,SACL+B,QAASd,KAAKJ,MAAMgF,UAEpB7H,EAAAC,EAAAC,cAAA,KAAG0D,UAAU,iCAhITzD,aAgJPgE,cACb2D,6BACA1D,4BACAC,kBAAQ,SAACvD,EAAO+B,GAAR,MAAmB,CACzBxB,KAAMP,EAAMM,SAASC,QAJV8C,CAMboB,GC1JK,SAASwC,EAAerC,GAC7B,IAAIsC,EACAC,EAAM,EAQV,OANAD,EAAOtC,EAAU,GAEbA,GAAW,KACbuC,EAAMC,KAAKC,MAAMzC,EAAU,MAGrBuC,EAAM,EAAIA,EAAM,KAAO,IAAMD,EAAO,IAGvC,SAASI,EAAqBC,GACnC,IAAIC,EAAgB,EAEpB,GAAqB,OAAjBD,EAAKpB,QAAkB,CACzB,IAAMhH,EAAIsI,IAAO,IAAIhE,MACfiE,EAAID,IAAOF,EAAKpB,QAAQwB,UACxBC,EAAUzI,EAAE0I,KAAKH,EAAG,WAEtBE,GAAW,IACbJ,EAAgBJ,KAAKU,KAAKF,EAAU,KAIxC,OAAOJ,MCnBHO,cASJ,SAAAA,EAAYhG,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4F,IACjB/F,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8F,GAAAzF,KAAAH,KAAMJ,KATR/B,MAAQ,CACNgI,cAAc,EACdtD,KAAM,GACNC,MAAO,EACPC,QAAS,EACT4C,cAAe,GAKfxF,EAAKiG,oBAAsBjG,EAAKiG,oBAAoBxF,KAAzBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KAC3BA,EAAK6C,aAAe7C,EAAK6C,aAAapC,KAAlBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KACpBA,EAAKkG,kBAAoBlG,EAAKkG,kBAAkBzF,KAAvBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KACzBA,EAAKmG,kBAAoBnG,EAAKmG,kBAAkB1F,KAAvBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KACzBA,EAAKoG,kBAAoBpG,EAAKoG,kBAAkB3F,KAAvBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KANRA,qFAYjB,GAFqBG,KAAKnC,MAAMgI,aAEd,KACRT,EAASpF,KAAKJ,MAAdwF,KACRpF,KAAK6C,SAAS,CACZwC,cAAeF,EAAqBC,qDAMxCc,cAAclG,KAAKmG,2DAInB,IAAMN,EAAe7F,KAAKnC,MAAMgI,aAEhC,IAAKA,GAAgBA,IAAiB7F,KAAKJ,MAAM4D,OAAQ,KAC/C4B,EAASpF,KAAKJ,MAAdwF,KACJ5C,EAAQ,EACRC,EAAU,EAEV2C,EAAKvB,OAAS,IAChBrB,EAAQyC,KAAKC,MAAME,EAAKvB,OAAS,IACjCpB,EAAU2C,EAAKvB,OAAS,IAExBpB,EAAU2C,EAAKvB,OAGb7D,KAAKmG,cACPD,cAAclG,KAAKmG,cAGrBnG,KAAK6C,SAAS,CACZgD,aAAc7F,KAAKJ,MAAM4D,OACzBjB,KAAM6C,EAAK7C,KACXC,MAAOA,EACPC,QAASA,EACT4C,cAAeF,EAAqBC,KAEtCpF,KAAKmG,aAAeC,YAClBpG,KAAK8F,oBAAoBxF,KAAKN,MAC9B,2CAKO4C,GACX5C,KAAK6C,SAAL/C,OAAAgD,EAAA,EAAAhD,CAAA,GAAiB8C,EAAEG,OAAOR,KAAOK,EAAEG,OAAOC,6CAI/BJ,GACXA,EAAEM,2DAGcN,GAChBA,EAAEM,iBACFlD,KAAKJ,MAAMyG,yDAIXrG,KAAKJ,MAAM0G,WAAWtG,KAAKJ,MAAM4D,kDAGjBZ,GAChBA,EAAEM,iBADiB,IAGXE,EAAcpD,KAAKJ,MAAnBwD,UACAb,EAASvC,KAAKnC,MAAd0E,KAJWc,EAKMrD,KAAKnC,MAAxB2E,EALaa,EAKbb,MAAOC,EALMY,EAKNZ,QAEPa,EAAQtD,KAAKJ,MAAM2D,mBACvBvD,KAAKJ,MAAM4D,OACXjB,EACAC,EACAC,GAGF,GAAIa,EAAMG,MACRC,MAAMJ,EAAMK,SADd,CAKAnB,EAAkB,OAAVA,GAA4B,KAAVA,EAAe,EAAIoB,SAASpB,GACtDC,EAAsB,OAAZA,GAAgC,KAAZA,EAAiB,EAAImB,SAASnB,GAC5D,IAEM8D,EAAa,CACjBhE,OACAsB,OAJ+B,GAAlBD,SAASpB,GAAcoB,SAASnB,IAO/CW,EAAUoD,OACR,CAAErC,WAAY,QAASsC,IAAKzG,KAAKJ,MAAM4D,QACvC+C,GAGFvG,KAAKJ,MAAMyG,+CAMX,OAFiBrG,KAAKJ,MAAdwF,KAIJrI,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,8BACb5D,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,aACb5D,EAAAC,EAAAC,cAAA,QAAM0D,UAAU,eAAe6D,SAAUxE,KAAK2C,cAC5C5F,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,OACb5D,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,gCACb5D,EAAAC,EAAAC,cAAA,SACEsF,KAAK,OACL5B,UAAU,uBACV5B,KAAK,OACL0F,YAAY,YACZC,aAAa,MACb1B,MAAOhD,KAAKnC,MAAM0E,KAClBoC,SAAU3E,KAAK0C,gBAGnB3F,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,gCACb5D,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,eACb5D,EAAAC,EAAAC,cAAA,SACEsF,KAAK,QACL5B,UAAU,eACV5B,KAAK,SACL2H,IAAI,IACJC,IAAI,MACJlC,YAAY,QACZC,aAAa,MACb1B,MAAOhD,KAAKnC,MAAM2E,MAClBmC,SAAU3E,KAAK0C,eAEjB3F,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,sBACb5D,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,oBAAf,QAIN5D,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,gCACb5D,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,eACb5D,EAAAC,EAAAC,cAAA,SACEsF,KAAK,UACL5B,UAAU,eACV5B,KAAK,SACL2H,IAAI,IACJC,IAAI,KACJlC,YAAY,UACZC,aAAa,MACb1B,MAAOhD,KAAKnC,MAAM4E,QAClBkC,SAAU3E,KAAK0C,eAEjB3F,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,sBACb5D,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,oBAAf,SAMR5D,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,OACb5D,EAAAC,EAAAC,cAAA,OAAKqH,GAAG,YAAY3D,UAAU,2CAC3BX,KAAKnC,MAAMwH,cAAgB,EACxB,0DACAP,EAAe9E,KAAKnC,MAAMwH,eAC1B,IACA,IAENtI,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,gCACb5D,EAAAC,EAAAC,cAAA,UACE6D,QAASd,KAAKiG,kBACdtF,UAAU,qCAFZ,kBAMA5D,EAAAC,EAAAC,cAAA,UACE6D,QAASd,KAAK+F,kBACdpF,UAAU,qCAFZ,UAMA5D,EAAAC,EAAAC,cAAA,UACE6D,QAASd,KAAKgG,kBACdrF,UAAU,oCAFZ,oBAaL5D,EAAAC,EAAAC,cAAC2J,EAAD,aApNU1J,aA6NRgE,cACb2D,2BAAiB,SAAAjF,GAAK,MAAI,CACxB,CAAEuE,WAAY,QAAS0C,QAAS,OAAQJ,IAAK7G,EAAM4D,WAErDpC,kBAAQ,SAAAnD,EAA6B2B,GAA7B,IAAgBkH,EAAhB7I,EAAGmF,UAAa0D,QAAhB,MAAwC,CAC9C1B,KAAM0B,EAAQ1B,MAAQ0B,EAAQ1B,KAAK,MALxBlE,CAOb0E,GC5NamB,MAZf,SAAoBnH,GAAO,IAEnBoH,EAD6BpH,EAA3B6C,QAA2B7C,EAAlByF,cAGjB,OAAOtI,EAAAC,EAAAC,cAAA,WAAM6H,EAAekC,KC8BfC,MAjCf,SAAoBrH,GAAO,IACjBsH,EAAwBtH,EAAxBsH,SAAUjD,EAAcrE,EAAdqE,KAAMkD,EAAQvH,EAARuH,IACpBC,EAAO,GACPC,EAAQ,GAEZ,GAAIH,EACFE,EAAO,SACPC,EAAQ,cACH,GAAa,OAATpD,EAAe,CAExB,IAAIjH,EAAIsK,IAAOH,GACX5B,EAAI+B,IAAOrD,EAAKuB,UAChBC,EAAUzI,EAAE0I,KAAKH,EAAG,WAExB8B,EAAQvC,EADMG,KAAKU,KAAKF,EAAU,KAGlC2B,EAAOE,IAAOrD,EAAKuB,UAAU+B,KAAKJ,GAGpC,OACEpK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAM0D,UAAU,qBAAqByG,GACrCrK,EAAAC,EAAAC,cAAA,QAAM0D,UAAU,qBAAqB0G,KCmC5BG,cA3Db,SAAAA,EAAY5H,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwH,IACjB3H,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0H,GAAArH,KAAAH,KAAMJ,KACD6H,gBAAkB5H,EAAK4H,gBAAgBnH,KAArBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KACvBA,EAAKmG,kBAAoBnG,EAAKmG,kBAAkB1F,KAAvBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KAHRA,iFAOjBG,KAAKJ,MAAM8H,SAAS1H,KAAKJ,MAAM4D,oDAI/BxD,KAAKJ,MAAM+H,cAAc3H,KAAKJ,MAAM4D,yCAIpC,IAAMoE,EAAqC,OAA1B5H,KAAKJ,MAAMiI,WAC5B,OACE9K,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,qBACb5D,EAAAC,EAAAC,cAAA,UACE8B,KAAK,SACL+B,QAASd,KAAKyH,gBACd9G,UAAU,gCACViH,SAAUA,EACVE,MAAO,CAAEC,YAAa,QAEtBhL,EAAAC,EAAAC,cAAA,KAAG0D,UAAU,uBAEf5D,EAAAC,EAAAC,cAAA,UACE8B,KAAK,SACL+B,QAASd,KAAKgG,kBACdrF,UAAU,kCACViH,SAAUA,GAEV7K,EAAAC,EAAAC,cAAA,KAAG0D,UAAU,mBAGjB5D,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,qBACb5D,EAAAC,EAAAC,cAAA,UACE8B,KAAK,SACL+B,QAASd,KAAKyH,gBACd9G,UAAU,gCACViH,SAAUA,GAEV7K,EAAAC,EAAAC,cAAA,KAAG0D,UAAU,gCA7CCzD,aCMpB8K,cAYJ,SAAAA,EAAYpI,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgI,IACjBnI,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkI,GAAA7H,KAAAH,KAAMJ,KAZR/B,MAAQ,CAENmG,QAAS,KAETC,KAAM,KAENoB,cAAe,EAEf4C,QAAS,MAKTpI,EAAKqI,eAAiBrI,EAAKqI,eAAe5H,KAApBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KACtBA,EAAKmG,kBAAoBnG,EAAKmG,kBAAkB1F,KAAvBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KAHRA,mFAMC,IACVuF,EAASpF,KAAKJ,MAAdwF,KACRpF,KAAK6C,SAAS,CACZmB,QAASoB,EAAKpB,QACdC,KAAMmB,EAAKnB,KACXoB,cAAeF,EAAqBC,GACpC6C,QAAS,IAAI3G,OAGftB,KAAKmG,aAAeC,YAClBpG,KAAKmI,iBAAiB7H,KAAKN,KAAMoF,GACjC,oDAKFc,cAAclG,KAAKmG,yDAGFiC,GAEbpI,KAAKJ,MAAMwF,KAAKpB,UAAYoE,EAAUhD,KAAKpB,SAC7ChE,KAAKmI,iBAAiBnI,KAAKJ,MAAMwF,yCAMnC,OAAwB,OADPpF,KAAKJ,MAAdwF,KACIpB,iDAGGoB,GACfpF,KAAK6C,SAAS,CACZwC,cAAeF,EAAqBC,GACpC6C,QAAS,IAAI3G,8CAIFsB,GAAG,IACRwC,EAASpF,KAAKJ,MAAdwF,KAINxC,EAAEG,OAAOsF,UAAUC,SAAS,aAC5B1F,EAAEG,OAAOsF,UAAUC,SAAS,kBAC5B1F,EAAEG,OAAOsF,UAAUC,SAAS,eAC5B1F,EAAEG,OAAOsF,UAAUC,SAAS,cAM1BtI,KAAKkH,WACPlH,KAAKJ,MAAM2I,mBAGXvI,KAAKJ,MAAM2E,UAAUa,4CAIT5B,GACdxD,KAAKJ,MAAM8H,SAASlE,6CAGJA,GAChBxD,KAAKJ,MAAM0G,WAAW9C,oCAGf,IACC4B,EAASpF,KAAKJ,MAAdwF,KAIJoD,EAAa,iDAEbxI,KAAKJ,MAAM6I,gBAAkBrD,EAAKd,GACpCkE,GAAc,aACLxI,KAAKkH,WACdsB,GAAc,cACLxI,KAAKJ,MAAMiI,aAAezC,EAAKd,KACxCkE,GAAc,0BAKhB,IAAIE,EAAmB,GAEnB1I,KAAKkH,WACPwB,GAAoB,yBAEpBA,GAAoB,yBAKtB,IAAIC,EAAoB,GAEpB3I,KAAKJ,MAAM6I,gBAAkBrD,EAAKd,GACpCqE,EAAoB,oBACX3I,KAAKJ,MAAMgJ,gBAAkBxD,EAAKd,KAC3CqE,EAAoB,iBAKtB,IAAIE,EAAO,GASX,OAPEA,EADwB,KAAtBF,EACK5L,EAAAC,EAAAC,cAAA,KAAG0D,UAAWgI,IAEd5L,EAAAC,EAAAC,cAAA,KAAG0D,UAAW+H,IAMrB3L,EAAAC,EAAAC,cAAA,OAAK0D,UAAW6H,EAAY1H,QAASd,KAAKkI,gBACxCnL,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,aAAakI,GAC5B9L,EAAAC,EAAAC,cAAA,OACE0D,UACE,aACCX,KAAKJ,MAAMiI,aAAezC,EAAKd,GAAK,yBAA2B,KAGjEc,EAAK7C,MAERxF,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,wBACb5D,EAAAC,EAAAC,cAAC6L,EAAD,CACErG,QAAS2C,EAAKvB,OACdwB,cAAerF,KAAKnC,MAAMwH,iBAG9BtI,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,aACb5D,EAAAC,EAAAC,cAAC8L,EAAD,CACE7B,SAAUlH,KAAKkH,WACfjD,KAAMmB,EAAKnB,KACXkD,IAAKnH,KAAKnC,MAAMoK,WAGpBlL,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,aACb5D,EAAAC,EAAAC,cAAC+L,EAAD,CACExF,OAAQ4B,EAAKd,GACbqD,cAAe3H,KAAKgG,kBACpB0B,SAAU1H,KAAKJ,MAAM8H,SACrBG,WAAY7H,KAAKJ,MAAMiI,sBAjKhB3K,aAqLJ2H,+BAAmBmD,GCvL5BiB,oLACK,IAAApJ,EAAAG,KACCkJ,EAAUlJ,KAAKJ,MAAfsJ,MAER,OAAK3K,mBAAS2K,GAEFxK,kBAAQwK,GAqChBnM,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,6CACb5D,EAAAC,EAAAC,cAAA,MAAI0D,UAAU,aAAd,4BACA5D,EAAAC,EAAAC,cAAA,KAAG0D,UAAU,QAAb,oCACA5D,EAAAC,EAAAC,cAAA,KAAG0D,UAAU,gBAAb,wCACA5D,EAAAC,EAAAC,cAAA,KAAG0D,UAAU,gBAAb,yCACA5D,EAAAC,EAAAC,cAAA,KAAG0D,UAAU,kBAAb,qDAEE5D,EAAAC,EAAAC,cAAA,WAFF,wEAxCFF,EAAAC,EAAAC,cAAA,OAAKqH,GAAG,YAAY3D,UAAU,iCAC5B5D,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,qBAAqB2D,GAAG,cACrCvH,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,cACf5D,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,aACb5D,EAAAC,EAAAC,cAAA,wBAEFF,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,wBACb5D,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAM0D,UAAU,sBAAhB,SADF,WAIF5D,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,aACb5D,EAAAC,EAAAC,cAAA,iBACMF,EAAAC,EAAAC,cAAA,QAAM0D,UAAU,sBAAhB,aAGR5D,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,eAEhBuI,EAAMC,IAAI,SAAA/D,GAAI,OACbrI,EAAAC,EAAAC,cAACmM,EAAD,CACEC,IAAKjE,EAAKd,GACVc,KAAMA,EACNsC,SAAU7H,EAAKD,MAAM8H,SACrBpB,WAAYzG,EAAKD,MAAM0G,WACvB/B,UAAW1E,EAAKD,MAAM2E,UACtBgE,iBAAkB1I,EAAKD,MAAM2I,iBAC7BV,WAAYhI,EAAKD,MAAMiI,WACvBe,cAAe/I,EAAKD,MAAMgJ,cAC1BH,cAAe5I,EAAKD,MAAM6I,mBA/B3B1L,EAAAC,EAAAC,cAAC2J,EAAD,aALO1J,aAuEL2H,gCAAmBoE,ICjE5BK,eAQJ,SAAAA,EAAY1J,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsJ,IACjBzJ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwJ,GAAAnJ,KAAAH,KAAMJ,KARR/B,MAAQ,CACNkD,YAAY,EACZ8G,WAAY,KACZe,cAAe,KACfH,cAAe,MAKf5I,EAAK+E,SAAW/E,EAAK+E,SAAStE,KAAdR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KAChBA,EAAKmB,SAAWnB,EAAKmB,SAASV,KAAdR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KAChBA,EAAK6H,SAAW7H,EAAK6H,SAASpH,KAAdR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KAChBA,EAAKwG,WAAaxG,EAAKwG,WAAW/F,KAAhBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KAClBA,EAAKyG,WAAazG,EAAKyG,WAAWhG,KAAhBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KAClBA,EAAK0E,UAAY1E,EAAK0E,UAAUjE,KAAfR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KACjBA,EAAK0I,iBAAmB1I,EAAK0I,iBAAiBjI,KAAtBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KACxBA,EAAK0D,mBAAqB1D,EAAK0D,mBAAmBjD,KAAxBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KATTA,0EAajBG,KAAK6C,SAAS,CACZ9B,YAAY,uCAKdf,KAAK6C,SAAS,CACZ9B,YAAY,qCAIPyC,GACPxD,KAAKgB,WACLhB,KAAK6C,SAAS,CAAEgF,WAAYrE,yCAI5BxD,KAAK6C,SAAS,CAAEgF,WAAY,0CAGnBrE,GAAQ,IAAAP,EAAAjD,KACbQ,OAAOC,QAAQ,+CACKT,KAAKJ,MAAnBwD,UACEmG,OAAO,CAAEpF,WAAY,QAASsC,IAAKjD,IAAUY,KAAK,WAC1DoF,QAAQC,IAAI,WAAajG,GACzBP,EAAKoD,iDAKDjB,GAAM,IAAAsE,EAAA1J,KACNoD,EAAcpD,KAAKJ,MAAnBwD,UAGRpD,KAAKuI,mBAEL,IACMhC,EAAa,CACjBvC,QAFc,IAAI1C,MAmBpB,OAfA8B,EACGoD,OAAO,CAAErC,WAAY,QAASsC,IAAKrB,EAAKd,IAAMiC,GAC9CnC,KAAK,WAEJsF,EAAK7G,SAAS,CACZ+F,cAAexD,EAAKd,KAGtBqF,WAAW,WACTD,EAAK7G,SAAS,CACZ+F,cAAe,QAEhB,QAGA,6CAGU,IAEJrC,EAFIqD,EAAA5J,KACToD,EAAcpD,KAAKJ,MAAnBwD,UAGRpD,KAAKJ,MAAMsJ,MAAMW,QAAQ,SAAAzE,GACvB,GAAqB,OAAjBA,EAAKpB,QAAkB,CAEf,KAIV,IAAMhH,EAAIsI,IAAO,IAAIhE,MACfiE,EAAID,IAAOF,EAAKpB,QAAQwB,UACxBC,EAAUzI,EAAE0I,KAAKH,EAAG,WACpB9C,EAAUgD,EAAU,EAAI,EAAIR,KAAKU,KAAKF,EAAU,IAEtD,GAAIhD,EAAU,EAAG,CACf,IAAMoB,EAASD,SAASwB,EAAKvB,QAAUpB,EACjCwB,EAAO,IAAI3C,KACjBiF,EAAa,CACXvC,QAbM,KAcNC,OACAJ,eAGF0C,EAAa,CACXvC,QAnBM,MAsBVZ,EACGoD,OAAO,CAAErC,WAAY,QAASsC,IAAKrB,EAAKd,IAAMiC,GAC9CnC,KAAK,WAEJwF,EAAK/G,SAAS,CACZ4F,cAAerD,EAAKd,KAGtBqF,WAAW,WACTC,EAAK/G,SAAS,CACZ4F,cAAe,QAEhB,qDAMMnE,EAAI/B,EAAMC,EAAOC,GAAS,IACnCyG,EAAUlJ,KAAKJ,MAAfsJ,MAGR,GAAoB,KAAhB3G,EAAKuH,OACP,MAAO,CACLrG,OAAO,EACPsG,MAAO,OACPpG,IAAK,qBAKT,IAAIqG,GAAa,EAMjB,OALAd,EAAMW,QAAQ,SAAAzE,GACRA,EAAK7C,OAASA,GAAQ6C,EAAKd,KAAOA,IACpC0F,GAAa,MAGE,IAAfA,EACK,CACLvG,OAAO,EACPsG,MAAO,OACPpG,IAAK,0CAKTnB,EAAkB,OAAVA,GAA4B,KAAVA,EAAe,EAAIoB,SAASpB,GACtDC,EAAsB,OAAZA,GAAgC,KAAZA,EAAiB,EAAImB,SAASnB,GACxDD,EAAQ,GAAKC,EAAU,GAAKwH,MAAMzH,IAAUyH,MAAMxH,GAC7C,CACLgB,OAAO,EACPsG,MAAO,QACPpG,IAAK,sDAILlB,GAAW,GACN,CACLgB,OAAO,EACPsG,MAAO,UACPpG,IAAK,6BAILnB,GAAS,IACJ,CACLiB,OAAO,EACPsG,MAAO,UACPpG,IAAK,iCAIF,CAAEF,OAAO,qCAIhB,IAAIyG,EAAO,GAuBX,OApBEA,EADElK,KAAKnC,MAAMkD,WACN,GAC4B,OAA1Bf,KAAKnC,MAAMgK,WAElB9K,EAAAC,EAAAC,cAACkN,EAAD,CACE5F,UAAWvE,KAAKuE,UAChBK,SAAU5E,KAAK4E,SACfrB,mBAAoBvD,KAAKuD,qBAK3BxG,EAAAC,EAAAC,cAACmN,EAAD,CACE5G,OAAQxD,KAAKnC,MAAMgK,WACnBxB,WAAYrG,KAAKqG,WACjBC,WAAYtG,KAAKsG,WACjB/C,mBAAoBvD,KAAKuD,qBAM7BxG,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,QACb5D,EAAAC,EAAAC,cAACiF,EAAD,CACEnB,WAAYf,KAAKnC,MAAMkD,WACvBC,SAAUhB,KAAKgB,WAEjBjE,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,kBACZuJ,EACDnN,EAAAC,EAAAC,cAACoN,GAAD,CACEnB,MAAOlJ,KAAKJ,MAAMsJ,MAClBxB,SAAU1H,KAAK0H,SACfpB,WAAYtG,KAAKsG,WACjB/B,UAAWvE,KAAKuE,UAChBgE,iBAAkBvI,KAAKuI,iBACvBV,WAAY7H,KAAKnC,MAAMgK,WACvBe,cAAe5I,KAAKnC,MAAM+K,cAC1BH,cAAezI,KAAKnC,MAAM4K,iBAG9B1L,EAAAC,EAAAC,cAACoE,EAAD,cAlOWnE,aA8OJgE,eACbE,kBAAQ,SAACvD,EAAO+B,GAAR,MAAmB,CACzBsJ,MAAOrL,EAAMuF,UAAU0D,QAAQoC,MAC/B9K,KAAMP,EAAMM,SAASC,QAEvByG,2BAAiB,SAAAjF,GAAK,MAAI,CACxB,CACEuE,WAAY,QAEZmG,QAAS,CAAC,CAAC,UAAW,SACtBC,MAAO,CAAC,CAAC,MAAO,KAAM3K,EAAMxB,KAAK6C,UAVxBC,CAaboI,WC5OFnL,IAASqM,cAAcpL,GAGvBjB,IAASiF,YAGT,IAaMqH,GAb0BvJ,YAC9BwJ,6BAAmBvM,IAbH,CAChBwM,YAAa,QACbC,wBAAwB,IAYxBC,yBAAe1M,KAFe+C,CAG9B4J,IAUYC,CAPMC,YAAgB,CAClC7M,SAAU8M,kBACV7H,UAAW8H,qBAIQ,GAInBhK,YACEwJ,6BAAmBvM,KAEnBqC,OAAO2K,8BAAgC3K,OAAO2K,iCAyBnCC,oLAnBX,OACErO,EAAAC,EAAAC,cAACoO,EAAA,SAAD,CAAUZ,MAAOA,IACf1N,EAAAC,EAAAC,cAACqO,EAAA,EAAD,KACEvO,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,OACb5D,EAAAC,EAAAC,cAACsO,EAAA,EAAD,KACExO,EAAAC,EAAAC,cAACuO,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,SACLC,UAAW3M,EAAuBwC,KAEpCzE,EAAAC,EAAAC,cAACuO,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWpO,EAAoB+L,iBAZjDpM,aC7CE0O,QACW,cAA7BpL,OAAOqL,SAASC,UAEe,UAA7BtL,OAAOqL,SAASC,UAEhBtL,OAAOqL,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAOlP,EAAAC,EAAAC,cAACiP,GAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnI,KAAK,SAAAoI,GACjCA,EAAaC","file":"static/js/main.1098e91f.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass LoadingScreen extends Component {\n  render() {\n    return <div>Loading...</div>;\n  }\n}\n\nexport default LoadingScreen;\n","import locationHelperBuilder from 'redux-auth-wrapper/history4/locationHelper';\nimport { connectedRouterRedirect } from 'redux-auth-wrapper/history4/redirect';\nimport createHistory from 'history/createBrowserHistory';\nimport LoadingScreen from '../components/LoadingScreen';\n\nconst locationHelper = locationHelperBuilder({});\nconst browserHistory = createHistory();\n\nexport const UserIsAuthenticated = connectedRouterRedirect({\n  wrapperDisplayName: 'UserIsAuthenticated',\n  AuthenticatingComponent: LoadingScreen,\n  allowRedirectBack: true,\n  redirectPath: (state, ownProps) =>\n    locationHelper.getRedirectQueryParam(ownProps) || '/login',\n  authenticatingSelector: ({ firebase: { auth, profile, isInitializing } }) =>\n    !auth.isLoaded || isInitializing === true,\n  authenticatedSelector: ({ firebase: { auth } }) =>\n    auth.isLoaded && !auth.isEmpty,\n  redirectAction: newLoc => dispatch => {\n    browserHistory.replace(newLoc); // or routerActions.replace\n    dispatch({ type: 'UNAUTHED_REDIRECT' });\n  }\n});\n\nexport const UserIsNotAuthenticated = connectedRouterRedirect({\n  wrapperDisplayName: 'UserIsNotAuthenticated',\n  AuthenticatingComponent: LoadingScreen,\n  allowRedirectBack: false,\n  redirectPath: (state, ownProps) =>\n    locationHelper.getRedirectQueryParam(ownProps) || '/',\n  authenticatingSelector: ({ firebase: { auth, isInitializing } }) =>\n    !auth.isLoaded || isInitializing === true,\n  authenticatedSelector: ({ firebase: { auth } }) =>\n    auth.isLoaded && auth.isEmpty,\n  redirectAction: newLoc => dispatch => {\n    browserHistory.replace(newLoc); // or routerActions.replace\n    dispatch({ type: 'UNAUTHED_REDIRECT' });\n  }\n});\n","const firebaseConfig = {\n  apiKey: 'AIzaSyC1Zd2YKmCe138f8ib6g4KyUg0VSOWH7V4',\n  authDomain: 'time-tracker-react-fd964.firebaseapp.com',\n  databaseURL: 'https://time-tracker-react-fd964.firebaseio.com',\n  projectId: 'time-tracker-react-fd964',\n  storageBucket: 'time-tracker-react-fd964.appspot.com',\n  messagingSenderId: '538720789539'\n};\n\nexport default firebaseConfig;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { firebaseConnect } from 'react-redux-firebase';\n\nclass AppNavbar extends Component {\n  state = {\n    isAuthenticated: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.logout = this.logout.bind(this);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const { auth } = props;\n\n    if (auth.uid) {\n      return { isAuthenticated: true };\n    } else {\n      return { isAuthenticated: false };\n    }\n  }\n\n  logout() {\n    const { firebase } = this.props;\n    if (window.confirm('Are you sure you want to log out?')) {\n      firebase.auth().signOut();\n    }\n  }\n\n  render() {\n    const { isAuthenticated } = this.state;\n    const { auth } = this.props;\n\n    return (\n      <div className=\"navbar sticky-top navbar-expand-md navbar-dark bg-primary\">\n        <div className=\"container\">\n          <a href=\"#!\" className=\"navbar-brand\">\n            <i className=\"fas fa-tasks pr-3\" />\n            Time Tracker v2\n          </a>\n          <a href=\"https://github.com/nickrie\" className=\"text-light ml-2\">\n            <i className=\"fab fa-github fa-2x\" />\n          </a>\n          {isAuthenticated ? (\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item text-light mr-3 d-none d-md-block\">\n                <b>{auth.email}</b>\n              </li>\n              <li className=\"nav-item\">\n                <a href=\"#!\" className=\"text-light\" onClick={this.logout}>\n                  Logout\n                </a>\n              </li>\n            </ul>\n          ) : (\n            ''\n          )}\n          {this.props.formHidden ? (\n            <div className=\"ml-3\">\n              <a href=\"#!\" onClick={this.props.showForm} className=\"text-light\">\n                <i className=\"fas fa-arrow-down fa-2x\" />\n              </a>\n            </div>\n          ) : (\n            ''\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nAppNavbar.propTypes = {\n  firebase: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  formHidden: PropTypes.bool.isRequired,\n  showForm: PropTypes.func.isRequired\n};\n\nexport default compose(\n  firebaseConnect(),\n  connect((state, props) => ({\n    auth: state.firebase.auth\n  }))\n)(AppNavbar);\n","import React from 'react';\n\nexport default function Footer() {\n  return (\n    <footer className=\"bg-light py-3 text-center text-success\">\n      <p className=\"mb-0\">\n        &copy; <a href=\"https://github.com/nickrie\">Nick Riemondi</a>\n        {' ' + new Date().getFullYear()}\n      </p>\n    </footer>\n  );\n}\n","import React, { Component } from 'react';\nimport { withFirebase } from 'react-redux-firebase';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\nimport AppNavbar from './layout/AppNavbar';\nimport AppFooter from './layout/AppFooter';\n\nclass Login extends Component {\n  render() {\n    const { firebase } = this.props;\n\n    const uiConfig = {\n      signInFlow: 'popup',\n      signInOptions: [\n        firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n        firebase.auth.GithubAuthProvider.PROVIDER_ID,\n        firebase.auth.EmailAuthProvider.PROVIDER_ID\n      ],\n      callbacks: {\n        signInSuccess: () => false\n      }\n    };\n\n    return (\n      <div className=\"main\">\n        <AppNavbar />\n        <div className=\"text-secondary text-center\">\n          <h1 className=\"display-3 mt-2\">Welcome!</h1>\n          <p className=\"lead\">Choose a login method:</p>\n        </div>\n        <StyledFirebaseAuth\n          uiConfig={uiConfig}\n          firebaseAuth={firebase.auth()}\n        />\n        <AppFooter />\n      </div>\n    );\n  }\n}\n\nexport default withFirebase(Login);\n","import React, { Component } from 'react';\nimport { firebaseConnect, firestoreConnect } from 'react-redux-firebase';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\n\nclass AddTask extends Component {\n  state = {\n    name: '',\n    hours: 0,\n    minutes: 0\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const { firestore, auth } = this.props;\n    const { name } = this.state;\n    let { hours, minutes } = this.state;\n\n    const check = this.props.validateTaskInputs(\n      this.props.taskId,\n      name,\n      hours,\n      minutes\n    );\n\n    if (check.error) {\n      alert(check.msg);\n      return;\n    }\n\n    hours = hours === null || hours === '' ? 0 : parseInt(hours);\n    minutes = minutes === null || minutes === '' ? 0 : parseInt(minutes);\n    const logged = parseInt(hours) * 60 + parseInt(minutes);\n    const created = new Date();\n\n    const taskAdd = {\n      uid: auth.uid,\n      created,\n      name,\n      logged,\n      started: null,\n      last: null\n    };\n\n    firestore.add({ collection: 'tasks' }, taskAdd).then(res => {\n      // append the doc id to the task object\n      taskAdd.id = res.id;\n      // start the new task\n      this.props.startTask(taskAdd);\n    });\n\n    // clear the form\n    this.setState({\n      name: '',\n      hours: 0,\n      minutes: 0\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"card bg-light\">\n        <div className=\"card-body\">\n          <form className=\"ml-auto my-0\" onSubmit={this.handleSubmit}>\n            <div className=\"row\">\n              <div className=\"form-group col-md-6 col-lg-8\">\n                <input\n                  name=\"name\"\n                  className=\"form-control mr-sm-2\"\n                  type=\"text\"\n                  placeholder=\"Task Name\"\n                  autoComplete=\"off\"\n                  value={this.state.name}\n                  onChange={this.handleChange}\n                />\n              </div>\n              <div className=\"form-group col-md-3 col-lg-2\">\n                <div className=\"input-group\">\n                  <input\n                    name=\"hours\"\n                    className=\"form-control\"\n                    type=\"number\"\n                    placeholder=\"Hours\"\n                    autoComplete=\"off\"\n                    value={this.state.hours}\n                    onChange={this.handleChange}\n                  />\n                  <div className=\"input-group-append\">\n                    <div className=\"input-group-text\">h</div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"form-group col-md-3 col-lg-2\">\n                <div className=\"input-group\">\n                  <input\n                    name=\"minutes\"\n                    className=\"form-control\"\n                    type=\"number\"\n                    placeholder=\"Minutes\"\n                    autoComplete=\"off\"\n                    value={this.state.minutes}\n                    onChange={this.handleChange}\n                  />\n                  <div className=\"input-group-append\">\n                    <div className=\"input-group-text\">m</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col\">\n                <button className=\"btn btn-md-block btn-primary\">\n                  Add Task\n                </button>\n              </div>\n              <div className=\"col text-right\">\n                <button\n                  className=\"btn btn-secondary\"\n                  type=\"button\"\n                  onClick={this.props.hideForm}\n                >\n                  <i className=\"fas fa-arrow-up\" />\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddTask.propTypes = {\n  firebase: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nexport default compose(\n  firestoreConnect(),\n  firebaseConnect(),\n  connect((state, props) => ({\n    auth: state.firebase.auth\n  }))\n)(AddTask);\n","import Moment from 'moment';\n\nexport function displayMinutes(minutes) {\n  let mins = 0;\n  let hrs = 0;\n\n  mins = minutes % 60;\n\n  if (minutes >= 60) {\n    hrs = Math.floor(minutes / 60);\n  }\n\n  return (hrs > 0 ? hrs + 'h ' : '') + mins + 'm';\n}\n\nexport function displayActiveMinutes(task) {\n  let activeMinutes = 0;\n\n  if (task.started !== null) {\n    const a = Moment(new Date());\n    const b = Moment(task.started.toDate());\n    const seconds = a.diff(b, 'seconds');\n    // we only start adding time if 5 seconds have elapsed, see task.js::stopTask()\n    if (seconds >= 5) {\n      activeMinutes = Math.ceil(seconds / 60);\n    }\n  }\n\n  return activeMinutes;\n}\n","import React, { Component } from 'react';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\n\nimport LoadingScreen from './../LoadingScreen';\nimport { displayMinutes, displayActiveMinutes } from './../../helpers/display';\n\nclass EditTask extends Component {\n  state = {\n    loadedTaskId: false,\n    name: '',\n    hours: 0,\n    minutes: 0,\n    activeMinutes: 0\n  };\n\n  constructor(props) {\n    super(props);\n    this.updateActiveMinutes = this.updateActiveMinutes.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleCancelClick = this.handleCancelClick.bind(this);\n    this.handleDeleteClick = this.handleDeleteClick.bind(this);\n    this.handleSubmitClick = this.handleSubmitClick.bind(this);\n  }\n\n  updateActiveMinutes() {\n    const loadedTaskId = this.state.loadedTaskId;\n\n    if (loadedTaskId) {\n      const { task } = this.props;\n      this.setState({\n        activeMinutes: displayActiveMinutes(task)\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.refreshTimer);\n  }\n\n  componentDidUpdate() {\n    const loadedTaskId = this.state.loadedTaskId;\n\n    if (!loadedTaskId || loadedTaskId !== this.props.taskId) {\n      const { task } = this.props;\n      let hours = 0;\n      let minutes = 0;\n\n      if (task.logged > 60) {\n        hours = Math.floor(task.logged / 60);\n        minutes = task.logged % 60;\n      } else {\n        minutes = task.logged;\n      }\n\n      if (this.refreshTimer) {\n        clearInterval(this.refreshTimer);\n      }\n\n      this.setState({\n        loadedTaskId: this.props.taskId,\n        name: task.name,\n        hours: hours,\n        minutes: minutes,\n        activeMinutes: displayActiveMinutes(task)\n      });\n      this.refreshTimer = setInterval(\n        this.updateActiveMinutes.bind(this),\n        5000\n      );\n    }\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  // prevent the form from submitting\n  handleSubmit(e) {\n    e.preventDefault();\n  }\n\n  handleCancelClick(e) {\n    e.preventDefault();\n    this.props.cancelEdit();\n  }\n\n  handleDeleteClick() {\n    this.props.deleteTask(this.props.taskId);\n  }\n\n  handleSubmitClick(e) {\n    e.preventDefault();\n\n    const { firestore } = this.props;\n    const { name } = this.state;\n    let { hours, minutes } = this.state;\n\n    const check = this.props.validateTaskInputs(\n      this.props.taskId,\n      name,\n      hours,\n      minutes\n    );\n\n    if (check.error) {\n      alert(check.msg);\n      return;\n    }\n\n    hours = hours === null || hours === '' ? 0 : parseInt(hours);\n    minutes = minutes === null || minutes === '' ? 0 : parseInt(minutes);\n    const logged = parseInt(hours) * 60 + parseInt(minutes);\n\n    const taskUpdate = {\n      name,\n      logged\n    };\n\n    firestore.update(\n      { collection: 'tasks', doc: this.props.taskId },\n      taskUpdate\n    );\n\n    this.props.cancelEdit();\n  }\n\n  render() {\n    const { task } = this.props;\n\n    if (task) {\n      return (\n        <div className=\"card bg-primary text-light\">\n          <div className=\"card-body\">\n            <form className=\"ml-auto my-0\" onSubmit={this.handleSubmit}>\n              <div className=\"row\">\n                <div className=\"form-group col-md-6 col-lg-8\">\n                  <input\n                    name=\"name\"\n                    className=\"form-control mr-sm-2\"\n                    type=\"text\"\n                    placeholder=\"Task Name\"\n                    autoComplete=\"off\"\n                    value={this.state.name}\n                    onChange={this.handleChange}\n                  />\n                </div>\n                <div className=\"form-group col-md-3 col-lg-2\">\n                  <div className=\"input-group\">\n                    <input\n                      name=\"hours\"\n                      className=\"form-control\"\n                      type=\"number\"\n                      min=\"0\"\n                      max=\"999\"\n                      placeholder=\"Hours\"\n                      autoComplete=\"off\"\n                      value={this.state.hours}\n                      onChange={this.handleChange}\n                    />\n                    <div className=\"input-group-append\">\n                      <div className=\"input-group-text\">h</div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"form-group col-md-3 col-lg-2\">\n                  <div className=\"input-group\">\n                    <input\n                      name=\"minutes\"\n                      className=\"form-control\"\n                      type=\"number\"\n                      min=\"0\"\n                      max=\"59\"\n                      placeholder=\"Minutes\"\n                      autoComplete=\"off\"\n                      value={this.state.minutes}\n                      onChange={this.handleChange}\n                    />\n                    <div className=\"input-group-append\">\n                      <div className=\"input-group-text\">m</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row\">\n                <div id=\"edit-help\" className=\"col-md-5 col-lg-4 text-light order-md-2\">\n                  {this.state.activeMinutes > 0\n                    ? 'NOTE: This does not include the current active time of ' +\n                      displayMinutes(this.state.activeMinutes) +\n                      '.'\n                    : ''}\n                </div>\n                <div className=\"col-md-7 col-lg-8 order-md-1\">\n                  <button\n                    onClick={this.handleSubmitClick}\n                    className=\"btn btn-success mr-1 my-2 my-sm-0\"\n                  >\n                    Submit Changes\n                  </button>\n                  <button\n                    onClick={this.handleCancelClick}\n                    className=\"btn btn-warning mr-1 my-2 my-sm-0\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    onClick={this.handleDeleteClick}\n                    className=\"btn btn-danger mr-1 my-2 my-sm-0\"\n                  >\n                    Delete Task\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      );\n    } else {\n      return <LoadingScreen />;\n    }\n  }\n}\n\nEditTask.propTypes = {\n  firestore: PropTypes.object.isRequired\n};\n\nexport default compose(\n  firestoreConnect(props => [\n    { collection: 'tasks', storeAs: 'task', doc: props.taskId }\n  ]),\n  connect(({ firestore: { ordered } }, props) => ({\n    task: ordered.task && ordered.task[0]\n  }))\n)(EditTask);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { displayMinutes } from './../../helpers/display';\n\nfunction LoggedTime(props) {\n  const { minutes, activeMinutes } = props;\n  const totalMinutes = minutes + activeMinutes;\n\n  return <div>{displayMinutes(totalMinutes)}</div>;\n}\n\nLoggedTime.propTypes = {\n  minutes: PropTypes.number.isRequired,\n  activeMinutes: PropTypes.number.isRequired\n};\n\nexport default LoggedTime;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport { displayMinutes } from './../../helpers/display';\n\nfunction LastActive(props) {\n  const { isActive, last, now } = props;\n  let long = '';\n  let short = '';\n\n  if (isActive) {\n    long = 'ACTIVE';\n    short = 'ACTIVE';\n  } else if (last !== null) {\n    // get short elapsed time str\n    let a = moment(now);\n    let b = moment(last.toDate());\n    let seconds = a.diff(b, 'seconds');\n    let minutes = Math.ceil(seconds / 60);\n    short = displayMinutes(minutes);\n    // get long elapsed time str\n    long = moment(last.toDate()).from(now);\n  }\n\n  return (\n    <div>\n      <span className=\"d-none d-lg-block\">{long}</span>\n      <span className=\"d-block d-lg-none\">{short}</span>\n    </div>\n  );\n}\n\nLastActive.propTypes = {\n  isActive: PropTypes.bool.isRequired,\n  last: PropTypes.object,\n  now: PropTypes.object\n};\n\nexport default LastActive;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass TaskButtons extends Component {\n  constructor(props) {\n    super(props);\n    this.handleEditClick = this.handleEditClick.bind(this);\n    this.handleDeleteClick = this.handleDeleteClick.bind(this);\n  }\n\n  handleEditClick() {\n    this.props.editTask(this.props.taskId);\n  }\n\n  handleDeleteClick() {\n    this.props.onDeleteClick(this.props.taskId);\n  }\n\n  render() {\n    const disabled = this.props.editTaskId !== null ? true : false;\n    return (\n      <div>\n        <div className=\"d-none d-md-block\">\n          <button\n            type=\"button\"\n            onClick={this.handleEditClick}\n            className=\"btn btn-outline-dark btn-edit\"\n            disabled={disabled}\n            style={{ marginRight: '2px' }}\n          >\n            <i className=\"fas fa-pencil-alt\" />\n          </button>\n          <button\n            type=\"button\"\n            onClick={this.handleDeleteClick}\n            className=\"btn btn-outline-dark btn-delete\"\n            disabled={disabled}\n          >\n            <i className=\"fas fa-trash\" />\n          </button>\n        </div>\n        <div className=\"d-block d-md-none\">\n          <button\n            type=\"button\"\n            onClick={this.handleEditClick}\n            className=\"btn btn-outline-dark btn-edit\"\n            disabled={disabled}\n          >\n            <i className=\"fas fa-pencil-alt\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nTaskButtons.propTypes = {\n  taskId: PropTypes.string.isRequired,\n  onDeleteClick: PropTypes.func.isRequired,\n  editTask: PropTypes.func.isRequired,\n  editTaskId: PropTypes.string\n};\n\nexport default TaskButtons;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { firestoreConnect } from 'react-redux-firebase';\n\nimport LoggedTime from './LoggedTime';\nimport LastActive from './LastActive';\nimport TaskButtons from './TaskButtons';\nimport { displayActiveMinutes } from './../../helpers/display';\n\nclass Task extends Component {\n  state = {\n    // null indicates not running, a timestamp indicates when it started running\n    started: null,\n    // null indicates it has never run, a timestamp indicates when it last ran\n    last: null,\n    // # of minutes the task has been active\n    activeMinutes: 0,\n    // current date to use for calculating last active, updated via setInterval to force the display change\n    nowDate: null\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleRowClick = this.handleRowClick.bind(this);\n    this.handleDeleteClick = this.handleDeleteClick.bind(this);\n  }\n\n  componentDidMount() {\n    const { task } = this.props;\n    this.setState({\n      started: task.started,\n      last: task.last,\n      activeMinutes: displayActiveMinutes(task),\n      nowDate: new Date()\n    });\n    // update our Time Logged and Last Active values every 5 seconds\n    this.refreshTimer = setInterval(\n      this.updateTimeValues.bind(this, task),\n      5000\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.refreshTimer);\n  }\n\n  componentDidUpdate(prevProps) {\n    // If 'started' changed, we need to re-calculate the active minutes\n    if (this.props.task.started !== prevProps.task.started) {\n      this.updateTimeValues(this.props.task);\n    }\n  }\n\n  isActive() {\n    const { task } = this.props;\n    return task.started !== null;\n  }\n\n  updateTimeValues(task) {\n    this.setState({\n      activeMinutes: displayActiveMinutes(task),\n      nowDate: new Date()\n    });\n  }\n\n  handleRowClick(e) {\n    const { task } = this.props;\n\n    // bail if they clicked the edit/delete button/icon\n    if (\n      e.target.classList.contains('btn-edit') ||\n      e.target.classList.contains('fa-pencil-alt') ||\n      e.target.classList.contains('btn-delete') ||\n      e.target.classList.contains('fa-trash')\n    ) {\n      return;\n    }\n\n    // If this task is active, stop it\n    if (this.isActive()) {\n      this.props.stopRunningTasks();\n    } else {\n      // start the task (this also stops any other running tasks)\n      this.props.startTask(task);\n    }\n  }\n\n  handleEditClick(taskId) {\n    this.props.editTask(taskId);\n  }\n\n  handleDeleteClick(taskId) {\n    this.props.deleteTask(taskId);\n  }\n\n  render() {\n    const { task } = this.props;\n\n    // set row classes\n\n    let rowClasses = 'row row-task border-top p-2 align-items-center';\n\n    if (this.props.stoppedTaskId === task.id) {\n      rowClasses += ' bg-danger';\n    } else if (this.isActive()) {\n      rowClasses += ' bg-success';\n    } else if (this.props.editTaskId === task.id) {\n      rowClasses += ' bg-primary text-light';\n    }\n\n    // set hover icon\n\n    let hoverIconClasses = '';\n\n    if (this.isActive()) {\n      hoverIconClasses += 'hover-icon fas fa-stop';\n    } else {\n      hoverIconClasses += 'hover-icon fas fa-play';\n    }\n\n    // set action icon if we just started/stopped a task\n\n    let actionIconClasses = '';\n\n    if (this.props.stoppedTaskId === task.id) {\n      actionIconClasses = 'fas fa-hand-paper';\n    } else if (this.props.startedTaskId === task.id) {\n      actionIconClasses = 'fas fa-rocket';\n    }\n\n    // set icon\n\n    let icon = '';\n    if (actionIconClasses !== '') {\n      icon = <i className={actionIconClasses} />;\n    } else {\n      icon = <i className={hoverIconClasses} />;\n    }\n\n    // output\n\n    return (\n      <div className={rowClasses} onClick={this.handleRowClick}>\n        <div className=\"col col-1\">{icon}</div>\n        <div\n          className={\n            'col col-4' +\n            (this.props.editTaskId === task.id ? ' bg-primary text-light' : '')\n          }\n        >\n          {task.name}\n        </div>\n        <div className=\"col col-3 text-right\">\n          <LoggedTime\n            minutes={task.logged}\n            activeMinutes={this.state.activeMinutes}\n          />\n        </div>\n        <div className=\"col col-2\">\n          <LastActive\n            isActive={this.isActive()}\n            last={task.last}\n            now={this.state.nowDate}\n          />\n        </div>\n        <div className=\"col col-2\">\n          <TaskButtons\n            taskId={task.id}\n            onDeleteClick={this.handleDeleteClick}\n            editTask={this.props.editTask}\n            editTaskId={this.props.editTaskId}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nTask.propTypes = {\n  task: PropTypes.object.isRequired,\n  firestore: PropTypes.object.isRequired,\n  editTask: PropTypes.func.isRequired,\n  deleteTask: PropTypes.func.isRequired,\n  startTask: PropTypes.func.isRequired,\n  stopRunningTasks: PropTypes.func.isRequired,\n  editTaskId: PropTypes.string,\n  startedTaskId: PropTypes.string,\n  stoppedTaskId: PropTypes.string\n};\n\nexport default firestoreConnect()(Task);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { firestoreConnect, isLoaded, isEmpty } from 'react-redux-firebase';\n\nimport LoadingScreen from './../LoadingScreen';\nimport Task from './Task';\n\nclass Tasks extends Component {\n  render() {\n    const { tasks } = this.props;\n\n    if (!isLoaded(tasks)) {\n      return <LoadingScreen />;\n    } else if (!isEmpty(tasks)) {\n      return (\n        <div id=\"task-list\" className=\"container text-left mt-3 mb-5\">\n          <div className=\"row text-secondary\" id=\"row-header\">\n            <div className=\"col col-1\" />\n            <div className=\"col col-4\">\n              <h5>Task Name</h5>\n            </div>\n            <div className=\"col col-3 text-right\">\n              <h5>\n                <span className=\"d-none d-lg-inline\">Time </span>Logged\n              </h5>\n            </div>\n            <div className=\"col col-2\">\n              <h5>\n                Last<span className=\"d-none d-lg-inline\"> Active</span>\n              </h5>\n            </div>\n            <div className=\"col col-2\" />\n          </div>\n          {tasks.map(task => (\n            <Task\n              key={task.id}\n              task={task}\n              editTask={this.props.editTask}\n              deleteTask={this.props.deleteTask}\n              startTask={this.props.startTask}\n              stopRunningTasks={this.props.stopRunningTasks}\n              editTaskId={this.props.editTaskId}\n              startedTaskId={this.props.startedTaskId}\n              stoppedTaskId={this.props.stoppedTaskId}\n            />\n          ))}\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"container text-center text-secondary my-5\">\n          <h1 className=\"display-4\">Your task list is empty.</h1>\n          <p className=\"lead\">Add a task above to get started!</p>\n          <p className=\"text-success\">New tasks are started automatically.</p>\n          <p className=\"text-warning\">Click a task to start/stop the timer.</p>\n          <p className=\"text-secondary\">\n            Times are always rounded up to the nearest minute.\n            <br />A task must be active for at least 5 seconds for time to be\n            logged.\n          </p>\n        </div>\n      );\n    }\n  }\n}\n\nTasks.propTypes = {\n  firestore: PropTypes.object.isRequired,\n  tasks: PropTypes.array,\n  editTask: PropTypes.func.isRequired,\n  deleteTask: PropTypes.func.isRequired,\n  startTask: PropTypes.func.isRequired,\n  stopRunningTasks: PropTypes.func.isRequired,\n  editTaskId: PropTypes.string,\n  startedTaskId: PropTypes.string,\n  stoppedTaskId: PropTypes.string\n};\n\nexport default firestoreConnect()(Tasks);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport Moment from 'moment';\n\nimport AppNavbar from './layout/AppNavbar';\nimport AppFooter from './layout/AppFooter';\nimport AddTask from './tasks/AddTask';\nimport EditTask from './tasks/EditTask';\nimport Tasks from './tasks/Tasks';\n\nclass Main extends Component {\n  state = {\n    formHidden: false,\n    editTaskId: null,\n    startedTaskId: null,\n    stoppedTaskId: null\n  };\n\n  constructor(props) {\n    super(props);\n    this.hideForm = this.hideForm.bind(this);\n    this.showForm = this.showForm.bind(this);\n    this.editTask = this.editTask.bind(this);\n    this.cancelEdit = this.cancelEdit.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n    this.startTask = this.startTask.bind(this);\n    this.stopRunningTasks = this.stopRunningTasks.bind(this);\n    this.validateTaskInputs = this.validateTaskInputs.bind(this);\n  }\n\n  hideForm() {\n    this.setState({\n      formHidden: true\n    });\n  }\n\n  showForm() {\n    this.setState({\n      formHidden: false\n    });\n  }\n\n  editTask(taskId) {\n    this.showForm();\n    this.setState({ editTaskId: taskId });\n  }\n\n  cancelEdit() {\n    this.setState({ editTaskId: null });\n  }\n\n  deleteTask(taskId) {\n    if (window.confirm('Are you sure you want to delete this task?')) {\n      const { firestore } = this.props;\n      firestore.delete({ collection: 'tasks', doc: taskId }).then(() => {\n        console.log('DELETED ' + taskId);\n        this.cancelEdit();\n      });\n    }\n  }\n\n  startTask(task) {\n    const { firestore } = this.props;\n\n    // Stop any running tasks first\n    this.stopRunningTasks();\n\n    const started = new Date();\n    const taskUpdate = {\n      started\n    };\n    firestore\n      .update({ collection: 'tasks', doc: task.id }, taskUpdate)\n      .then(() => {\n        // console.log(`STARTED ${task.id}`);\n        this.setState({\n          startedTaskId: task.id\n        });\n        // clear startedTaskId after one second\n        setTimeout(() => {\n          this.setState({\n            startedTaskId: null\n          });\n        }, 1000);\n      });\n\n    return false;\n  }\n\n  stopRunningTasks() {\n    const { firestore } = this.props;\n    let started, taskUpdate;\n\n    this.props.tasks.forEach(task => {\n      if (task.started !== null) {\n        // stop the task\n        started = null;\n\n        // calculate new logged time\n        //  don't update logged time or last date if it was active for less than 5 seconds\n        const a = Moment(new Date());\n        const b = Moment(task.started.toDate());\n        const seconds = a.diff(b, 'seconds');\n        const minutes = seconds < 5 ? 0 : Math.ceil(seconds / 60);\n\n        if (minutes > 0) {\n          const logged = parseInt(task.logged) + minutes;\n          const last = new Date();\n          taskUpdate = {\n            started,\n            last,\n            logged\n          };\n        } else {\n          taskUpdate = {\n            started\n          };\n        }\n        firestore\n          .update({ collection: 'tasks', doc: task.id }, taskUpdate)\n          .then(() => {\n            // console.log(`STOPPED ${task.id}`);\n            this.setState({\n              stoppedTaskId: task.id\n            });\n            // clear stoppedTaskId after one second\n            setTimeout(() => {\n              this.setState({\n                stoppedTaskId: null\n              });\n            }, 1000);\n          });\n      }\n    });\n  }\n\n  validateTaskInputs(id, name, hours, minutes) {\n    const { tasks } = this.props;\n\n    // Ensure name is not empty\n    if (name.trim() === '') {\n      return {\n        error: true,\n        focus: 'name',\n        msg: 'NAME is required.'\n      };\n    }\n\n    // Ensure another task with that name doesn't already exist\n    let nameExists = false;\n    tasks.forEach(task => {\n      if (task.name === name && task.id !== id) {\n        nameExists = true;\n      }\n    });\n    if (nameExists === true) {\n      return {\n        error: true,\n        focus: 'name',\n        msg: 'A task already exists with that name.'\n      };\n    }\n\n    // Check hours and minutes to ensure they are integer values of the expected size\n    hours = hours === null || hours === '' ? 0 : parseInt(hours);\n    minutes = minutes === null || minutes === '' ? 0 : parseInt(minutes);\n    if (hours < 0 || minutes < 0 || isNaN(hours) || isNaN(minutes)) {\n      return {\n        error: true,\n        focus: 'hours',\n        msg: 'Hours and minutes must be positive integer values.'\n      };\n    }\n\n    if (minutes >= 60) {\n      return {\n        error: true,\n        focus: 'minutes',\n        msg: 'Minutes must be under 60.'\n      };\n    }\n\n    if (hours >= 1000) {\n      return {\n        error: true,\n        focus: 'minutes',\n        msg: 'Hours should not exceed 1000.'\n      };\n    }\n\n    return { error: false };\n  }\n\n  render() {\n    let form = '';\n\n    if (this.state.formHidden) {\n      form = '';\n    } else if (this.state.editTaskId === null) {\n      form = (\n        <AddTask\n          startTask={this.startTask}\n          hideForm={this.hideForm}\n          validateTaskInputs={this.validateTaskInputs}\n        />\n      );\n    } else {\n      form = (\n        <EditTask\n          taskId={this.state.editTaskId}\n          cancelEdit={this.cancelEdit}\n          deleteTask={this.deleteTask}\n          validateTaskInputs={this.validateTaskInputs}\n        />\n      );\n    }\n\n    return (\n      <div className=\"main\">\n        <AppNavbar\n          formHidden={this.state.formHidden}\n          showForm={this.showForm}\n        />\n        <div className=\"container mt-2\">\n          {form}\n          <Tasks\n            tasks={this.props.tasks}\n            editTask={this.editTask}\n            deleteTask={this.deleteTask}\n            startTask={this.startTask}\n            stopRunningTasks={this.stopRunningTasks}\n            editTaskId={this.state.editTaskId}\n            startedTaskId={this.state.startedTaskId}\n            stoppedTaskId={this.state.stoppedTaskId}\n          />\n        </div>\n        <AppFooter />\n      </div>\n    );\n  }\n}\n\nMain.propTypes = {\n  firestore: PropTypes.object.isRequired,\n  tasks: PropTypes.array\n};\n\n// export default firestoreConnect()(Dashboard);\nexport default compose(\n  connect((state, props) => ({\n    tasks: state.firestore.ordered.tasks,\n    auth: state.firebase.auth\n  })),\n  firestoreConnect(props => [\n    {\n      collection: 'tasks',\n      // orderBy: [['name', 'asc']],\n      orderBy: [['created', 'desc']],\n      where: [['uid', '==', props.auth.uid]]\n    }\n  ])\n)(Main);\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { UserIsAuthenticated, UserIsNotAuthenticated } from './helpers/auth';\nimport { Provider } from 'react-redux';\n\n// See http://docs.react-redux-firebase.com/history/v2.0.0/\nimport { createStore, combineReducers, compose } from 'redux';\nimport { reactReduxFirebase, firebaseReducer } from 'react-redux-firebase';\nimport firebase from 'firebase';\nimport 'firebase/firestore';\nimport { reduxFirestore, firestoreReducer } from 'redux-firestore';\n\nimport firebaseConfig from './secret/firebaseConfig';\n\nimport Login from './components/Login';\nimport Main from './components/Main';\n\n// import { firebaseConnect } from 'react-redux-firebase';\n\nimport './App.css';\n\n// react-redux-firebase config\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\n};\n\n// initialize firebase instance\nfirebase.initializeApp(firebaseConfig); // <- new to v2.*.*\n\n// initialize firestore\nfirebase.firestore();\n\n// Add reduxReduxFirebase enhancer when making store creator\nconst createStoreWithFirebase = compose(\n  reactReduxFirebase(firebase, rrfConfig), // firebase instance as first argument\n  reduxFirestore(firebase)\n)(createStore);\n\n// Add firebase to reducers\nconst rootReducer = combineReducers({\n  firebase: firebaseReducer,\n  firestore: firestoreReducer\n});\n\n// Create store with reducers and initial state\nconst initialState = {};\nconst store = createStoreWithFirebase(\n  rootReducer,\n  initialState,\n  compose(\n    reactReduxFirebase(firebase),\n    // Enable the browser Redux devtools\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Switch>\n              <Route\n                exact\n                path=\"/login\"\n                component={UserIsNotAuthenticated(Login)}\n              />\n              <Route exact path=\"/\" component={UserIsAuthenticated(Main)} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}